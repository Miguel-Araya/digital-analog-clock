/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Presentation;

import Domain.Reloj;
import Domain.SiguienteTiempo;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;


/**
 *
 * @author Miguel
 */
public class pnlReloj extends javax.swing.JPanel {

    /**
     * Creates new form pnlReloj
     */
    
    private Reloj reloj;
    private ImageIcon iconoPausa;
    private ImageIcon iconoContinuar;
    private BufferedImage imagenFondo;
    private SiguienteTiempo siguienteTiempo;
    
    public pnlReloj() {
        initComponents();
        
        this.reloj = new Reloj();
        
        this.iconoPausa = new ImageIcon(getClass().getResource("/img/pausa.png"));
        
        this.iconoContinuar = new ImageIcon(getClass().getResource("/img/continuar.png"));
        
        this.lblReiniciar.setIcon(new ImageIcon(getClass().getResource("/img/reiniciar.png")));
        
        this.lblHora.setIcon(new ImageIcon(getClass().getResource("/img/proximo.png")));
        
        this.lblPausa.setIcon(iconoPausa);
        
        this.lblMinuto.setIcon(new ImageIcon(getClass().getResource("/img/proximo.png")));
        
        this.lblSegundo.setIcon(new ImageIcon(getClass().getResource("/img/proximo.png")));
        
        this.cargarImagenFondo();
        
        this.setVisible(true);
        
        this.reloj.start();
        
        
    }
    
    public void cargarImagenFondo(){
        
        try {
            this.imagenFondo = ImageIO.read(getClass().getResourceAsStream("/img/fondo.png"));
        } catch (IOException ex) {
            Logger.getLogger(Reloj.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPausa = new javax.swing.JLabel();
        lblReiniciar = new javax.swing.JLabel();
        lblHora = new javax.swing.JLabel();
        lblMinuto = new javax.swing.JLabel();
        lblSegundo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3));

        lblPausa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblPausaMousePressed(evt);
            }
        });

        lblReiniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblReiniciarMousePressed(evt);
            }
        });

        lblHora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblHoraMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblHoraMousePressed(evt);
            }
        });

        lblMinuto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinutoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblMinutoMousePressed(evt);
            }
        });

        lblSegundo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSegundoMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblSegundoMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(lblMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(lblSegundo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(lblPausa, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 581, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSegundo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1))))
                            .addContainerGap())
                        .addComponent(lblPausa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lblMinutoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinutoMouseExited
       
      if(this.siguienteTiempo == null || !this.siguienteTiempo.isAlive()){
          return;
      }
        
       this.siguienteTiempo.setDetener(true);
    }//GEN-LAST:event_lblMinutoMouseExited

    private void lblHoraMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHoraMouseExited
       
        if (this.siguienteTiempo == null || !this.siguienteTiempo.isAlive()) {
            return;
        }
        
        this.siguienteTiempo.setDetener(true);
    }//GEN-LAST:event_lblHoraMouseExited

    private void lblSegundoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSegundoMouseExited
        
        if (this.siguienteTiempo == null || !this.siguienteTiempo.isAlive()) {
            return;
        }
        
        this.siguienteTiempo.setDetener(true);
    }//GEN-LAST:event_lblSegundoMouseExited

    private void lblPausaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPausaMousePressed
        if (this.reloj.getPausa()) {
            this.reloj.setPausa(false);

            this.lblPausa.setIcon(iconoPausa);

            this.reloj = new Reloj(this.reloj.getHora(), this.reloj.getMinuto(), this.reloj.getSegundo());
            this.reloj.start();
            this.repaint();
        } else {

            this.lblPausa.setIcon(iconoContinuar);
            this.reloj.setPausa(true);

        }
    }//GEN-LAST:event_lblPausaMousePressed

    private void lblReiniciarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReiniciarMousePressed

        this.reloj.resetClock();
        this.repaint();
        
    }//GEN-LAST:event_lblReiniciarMousePressed

    private void lblHoraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHoraMousePressed
        
        if (this.siguienteTiempo != null && this.siguienteTiempo.isAlive()) {
            this.siguienteTiempo.setDetener(true);
            return;
        }             
       
        this.siguienteTiempo = new SiguienteTiempo(this.reloj, 0, 200, this);
        this.siguienteTiempo.start();
    }//GEN-LAST:event_lblHoraMousePressed

    private void lblMinutoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinutoMousePressed

        if (this.siguienteTiempo != null && this.siguienteTiempo.isAlive()) {
            this.siguienteTiempo.setDetener(true);
            return;
        }

        this.siguienteTiempo = new SiguienteTiempo(this.reloj, 1, 100, this);
        this.siguienteTiempo.start();
    }//GEN-LAST:event_lblMinutoMousePressed

    private void lblSegundoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSegundoMousePressed

        if (this.siguienteTiempo != null && this.siguienteTiempo.isAlive()) {
            this.siguienteTiempo.setDetener(true);
            return;
        }

        this.siguienteTiempo = new SiguienteTiempo(this.reloj, 2, 100, this);
        this.siguienteTiempo.start();
    }//GEN-LAST:event_lblSegundoMousePressed

    @Override
    protected void paintComponent(Graphics g) {
        
        int xCentroFrame = this.getParent().getParent().getParent().getParent().getWidth()/2;
        int yCentroFrame = this.getParent().getParent().getParent().getParent().getHeight()/2;
        
        super.paintComponent(g);
        
        Graphics2D g2d = (Graphics2D) g;
        
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        
        g2d.drawImage(this.imagenFondo, 0, 0, getWidth(), getHeight(), null);
        
        this.reloj.actualizarTiempo();
        
        this.reloj.dibujar(g2d);
        
        g2d.setColor(Color.black);
        
        g2d.setFont(new Font("Lucida Sans", 1, 15));
        
        g2d.drawString("Hora", this.lblHora.getX()-6, this.lblHora.getY()-5);
        
        g2d.drawString("Minuto", this.lblMinuto.getX()-12, this.lblMinuto.getY()-5);
        
        g2d.drawString("Segundo", this.lblSegundo.getX()-10, this.lblMinuto.getY()-5);
        
        g2d.setFont(new Font("Lucida Sans", 1, 17));
        
        g2d.drawString(this.reloj.toString(), (getWidth()/2)-30, getHeight()/2);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblMinuto;
    private javax.swing.JLabel lblPausa;
    private javax.swing.JLabel lblReiniciar;
    private javax.swing.JLabel lblSegundo;
    // End of variables declaration//GEN-END:variables
}
